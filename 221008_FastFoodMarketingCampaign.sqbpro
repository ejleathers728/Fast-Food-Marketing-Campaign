<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/elizabethleathers/Desktop/Fast Food A:B/221008_FastFood_ABTest.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="953"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,17:mainMarketingCampaign"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="MarketingCampaign" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="55"/><column index="2" value="67"/><column index="3" value="63"/><column index="4" value="69"/><column index="5" value="62"/><column index="6" value="36"/><column index="7" value="103"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Fast Food Marketing Campaign 
-- By Liz Leathers

SELECT *
FROM MarketingCampaign

-- Total number of locations in marketing test
SELECT Count(DISTINCT(LocationID)) AS total_locations_tested
FROM MarketingCampaign

-- Total number of locations that used each promotion test
SELECT Promotion, COUNT(DISTINCT(LocationID)) AS total_locations
FROM MarketingCampaign
GROUP BY Promotion

--Total number of locations in each market size
SELECT MarketSize, COUNT(DISTINCT(LocationID)) AS total_locations_tested
FROM MarketingCampaign
GROUP BY MarketSize

-- Number of loactions for each promotion in the different market sizes
SELECT MarketSize, Promotion, COUNT(DISTINCT(LocationID)) AS total_locations_tested
FROM MarketingCampaign
GROUP BY Promotion, MarketSize

-- The average age of the market size group 
SELECT MarketSize, ROUND(AVG(ageofstore))
FROM MarketingCampaign
GROUP BY MarketSize

-- Create age range buckets 
--The number of locations in each age bucket
SELECT 
	CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
	COUNT(DISTINCT(LocationID)) AS total_locations_tested
FROM MarketingCampaign
GROUP BY agerange

-- The number of locations of each promotion in each age group 
SELECT 
	CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
	Promotion, COUNT(DISTINCT(LocationID)) AS total_locations_tested
FROM MarketingCampaign
GROUP BY agerange, Promotion


-- Total sales in thousands over the test period by individual store by promotion category
SELECT LocationID, Promotion, SUM(salesinthousands) AS totalpromotionsales
FROM MarketingCampaign
GROUP BY LocationID
ORDER BY promotion, totalpromotionsales DESC


-- Which promotion had the highest sales overall?
SELECT promotion, SUM(salesinthousands) AS totalpromotionsales
FROM MarketingCampaign
GROUP BY Promotion

-- Total sales in thousand by promotion category and market size
SELECT Promotion, MarketSize, SUM(salesinthousands) AS totalpromotionsales
FROM MarketingCampaign
GROUP BY Promotion, MarketSize
ORDER BY MarketSize

-- Which promotion had the highest SalesInThousands in each market size
Select MarketSize, Promotion, MAX(sub.totalpromotionsales) AS highestperformingsales
From (
		SELECT MarketSize, Promotion,  SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		GROUP BY  MarketSize, Promotion) sub
GROUP BY MarketSize

-- Which promotion had the highest SalesInThousands in each market using having 
-- not showing the sales amount just the market size and the promotion
Select MarketSize, Promotion
From (
		SELECT MarketSize, Promotion,  SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		GROUP BY  MarketSize, Promotion) sub
GROUP BY MarketSize
HAVING max(sub.totalpromotionsales) 

-- Which promotion had the lowest SalesInThousands in each market size
Select MarketSize, Promotion, MIN(sub.totalpromotionsales) AS lowestperformingsales
From (
		SELECT MarketSize, Promotion,  SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		GROUP BY  MarketSize, Promotion) sub
GROUP BY MarketSize

-- Average sales in thousand by promotion category and market size
SELECT Promotion, MarketSize, ROUND(AVG(salesinthousands)) AS avgpromotionsales
FROM MarketingCampaign
group by Promotion, MarketSize
Order by MarketSize

-- Use CASE to create age buckets for promotion and total SalesInThousands
SELECT 
			CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
			Promotion, SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		GROUP BY agerange, Promotion

-- Which promotion had the highest total SalesInThousands by age grouping
SELECT sub.agerange, promotion, max(sub.totalpromotionsales) as highesttotalpromosales
FROM (SELECT 
		CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
			Promotion, SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		GROUP BY Promotion, agerange) sub 
GROUP BY sub.agerange

-- Average store sales by promotion grouped by age bucket
SELECT 
	CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
	Promotion, ROUND(AVG(salesinthousands)) AS avgpromotionsales
FROM MarketingCampaign
GROUP BY agerange, Promotion

-- Looking at the promotion and market size broken down by age groupings
SELECT 
	CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
	Promotion, MarketSize, SUM(salesinthousands) AS totalpromotionsales
FROM MarketingCampaign
GROUP BY Promotion, agerange, MarketSize

-- Broad look at how the age of the store impacted the average SalesInThousands for each promotion within each MarketSize
--(sub out the like clause on the where line to view the different market sizes)
SELECT 
	CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
				WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
				WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
				WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
				WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
				ELSE 'over 25'
				END Agerange,
	Promotion, marketsize, SUM(salesinthousands) AS avgpromotionsales
FROM MarketingCampaign
WHERE MarketSize like '%large%'
GROUP BY Promotion, agerange, MarketSize
ORDER BY  agerange, Promotion

-- Use this query to look at the total sales of individual promotions 
--and the market size to see if the age of the store affected the performance in the same market size
	-- can substitute out the where clauses to specify the promotion and market size
SELECT sub.agerange, promotion, MarketSize, 
	max(sub.totalpromotionsales) as totalpromosales
From	(SELECT 
			CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
			Promotion, marketsize, SUM(salesinthousands) AS totalpromotionsales
		FROM MarketingCampaign
		WHERE MarketSize LIKE '%large%'
		GROUP BY Promotion, agerange, MarketSize) sub
WHERE Promotion = 1
GROUP BY sub.agerange
ORDER BY totalpromosales DESC

-- Use this query to look at the average sales of individual promotions
--and the market size to see if the age of the store affected the performance in the same market size
	-- can substitute out the where clauses to specify the promotion and market size
SELECT sub.agerange, promotion, MarketSize, 
	MAX(sub.avgpromotionsales) AS avgpromosales
FROM	
		(SELECT 
			CASE WHEN AgeOfStore &gt;= 0 AND AgeOfStore &lt;= 5 THEN '0 - 05'
						WHEN AgeOfStore &gt; 5 AND AgeOfStore &lt;= 10 THEN '06 - 10'
						WHEN AgeOfStore &gt; 10 AND AgeOfStore &lt;= 15 THEN '11 - 15'
						WHEN AgeOfStore &gt; 15 AND AgeOfStore &lt;= 20 THEN '16 - 20'
						WHEN AgeOfStore &gt; 20 AND AgeOfStore &lt;= 25 THEN '20 - 25'
						ELSE 'over 25'
						END Agerange,
			Promotion, marketsize, AVG(salesinthousands) AS avgpromotionsales
		FROM MarketingCampaign
		WHERE MarketSize LIKE '%large%'
		GROUP BY Promotion, agerange, MarketSize) sub
WHERE Promotion = 1
GROUP BY sub.agerange
ORDER BY avgpromosales DESC</sql><current_tab id="0"/></tab_sql></sqlb_project>
